plugins {
    id "java-library"
    id("io.qameta.allure") version "2.11.2"
}

group = 'tolstov_vadim'
version = '1.0-SNAPSHOT'

def allureVersion = "2.21.0",
    slf4jVersion = "2.0.7"

allure {
    report {
        version(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()

}


compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation "org.jetbrains:annotations:20.1.0"
    testImplementation(
            "com.codeborne:selenide:6.13.0",
            "org.junit.jupiter:junit-jupiter:5.9.2",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "com.codeborne:pdf-test:1.5.0",
            "com.codeborne:xls-test:1.4.3",
            "com.opencsv:opencsv:5.7.1",
            "com.google.code.gson:gson:2.10.1",
            "com.fasterxml.jackson.core:jackson-databind:2.13.1",
            "com.fasterxml.jackson.core:jackson-core:2.13.1",
            "org.aeonbits.owner:owner:1.0.12",
            "org.aspectj:aspectjweaver:1.9.19",
            "io.qameta.allure:allure-selenide:$allureVersion"

    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}


task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}
task regress_test(type: Test) {
    useJUnitPlatform {
        includeTags("REGRESS")
    }
}